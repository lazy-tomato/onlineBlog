import{_ as e,o as a,c as h,e as t}from"./app.acfc35a6.js";const r={},i=t('<h1 id="this" tabindex="-1"><a class="header-anchor" href="#this" aria-hidden="true">#</a> this</h1><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><p><strong>当前执行上下文</strong>的<strong>一个属性</strong>，在非严格模式下，总是指向一个对象，在严格模式下可以是任意值。</p><h2 id="this-指向总归四种情况" tabindex="-1"><a class="header-anchor" href="#this-指向总归四种情况" aria-hidden="true">#</a> this 指向总归四种情况</h2><h4 id="_1-默认绑定" tabindex="-1"><a class="header-anchor" href="#_1-默认绑定" aria-hidden="true">#</a> 1.默认绑定</h4><blockquote><p>直接使用而不带任何修饰的函数调用 ，就 默认且只能 应用 默认绑定。</p></blockquote><h4 id="_2-隐性绑定" tabindex="-1"><a class="header-anchor" href="#_2-隐性绑定" aria-hidden="true">#</a> 2.隐性绑定</h4><blockquote><p>函数里的 this 默认绑定为上下文对象</p></blockquote><h4 id="_3-显性绑定" tabindex="-1"><a class="header-anchor" href="#_3-显性绑定" aria-hidden="true">#</a> 3.显性绑定</h4><blockquote><p>call ，apply，bind</p></blockquote><h4 id="_4-new" tabindex="-1"><a class="header-anchor" href="#_4-new" aria-hidden="true">#</a> 4.new</h4><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><p><strong>优先级</strong> new 绑定 &gt; 显示绑定 &gt; 隐式绑定 &gt; 默认绑定</p><p><strong>备注</strong></p><ul><li>箭头函数的 this 绑定无法被修改；</li><li>this 默认绑定到哪呢，一般是<code>window</code>上，严格模式下 是<code>undefined</code>；</li></ul><h2 id="end" tabindex="-1"><a class="header-anchor" href="#end" aria-hidden="true">#</a> end</h2><ul><li>结束</li></ul>',17),d=[i];function n(s,o){return a(),h("div",null,d)}const l=e(r,[["render",n],["__file","1.说说this.html.vue"]]);export{l as default};
