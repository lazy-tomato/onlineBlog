import{_ as a,o as i,c as e,e as t}from"./app.acfc35a6.js";const s={},c=t('<h2 id="async函数" tabindex="-1"><a class="header-anchor" href="#async函数" aria-hidden="true">#</a> async函数</h2><ol><li>函数的返回值为 promise 对象</li><li>promise 对象的结果由 async 函数执行的返回值决定</li></ol><h2 id="await表达式" tabindex="-1"><a class="header-anchor" href="#await表达式" aria-hidden="true">#</a> await表达式</h2><p>await 右侧的表达式一般为 promise 对象, 但也可以是其它的值</p><ol><li>如果表达式是 promise 对象, await 返回的是 promise 成功的值</li><li>如果表达式是其它值, 直接将此值作为 await 的返回值</li><li>await 必须写在 async 函数中, 但 async 函数中可以没有 await</li><li>如果 await 的 promise 失败了, 代码直接暂停并抛出异常, 需要通过 try...catch 捕获处理</li><li>await后续的代码，可以理解为 在 await语句返回的 promise 对象的then方法中执行。</li></ol>',5),r=[c];function l(o,n){return i(),e("div",null,r)}const d=a(s,[["render",l],["__file","async awiat.html.vue"]]);export{d as default};
