import{_ as n,o as s,c as a,e}from"./app.acfc35a6.js";const o={},t=e(`<h1 id="从-0-1-彻底理解-new" tabindex="-1"><a class="header-anchor" href="#从-0-1-彻底理解-new" aria-hidden="true">#</a> 从 0-1 彻底理解 new</h1><h3 id="_1-mdn-官方解释" tabindex="-1"><a class="header-anchor" href="#_1-mdn-官方解释" aria-hidden="true">#</a> 1.mdn 官方解释</h3><p><strong><code>new</code> 运算符</strong>创建一个用户定义的对象类型的实例或具有构造函数的内置对象的实例。</p><blockquote><p>看起来有点复杂没关系</p></blockquote><h3 id="_2-new-运算符-做了什么" tabindex="-1"><a class="header-anchor" href="#_2-new-运算符-做了什么" aria-hidden="true">#</a> 2.new 运算符 做了什么</h3><ol><li>创建一个新对象。</li><li>把这个新对象的<code>__proto__</code>属性指向 原函数的<code>prototype</code>属性。(即继承原函数的原型)</li><li><strong>将这个新对象绑定到 此函数的 this 上</strong> 。</li><li>返回新对象，如果这个函数没有返回其他<strong>对象</strong>。</li></ol><h3 id="_3-new-foo-发生了什么" tabindex="-1"><a class="header-anchor" href="#_3-new-foo-发生了什么" aria-hidden="true">#</a> 3.new Foo()发生了什么</h3><ol><li>一个继承自 <code>Foo.prototype</code> 的新对象被创建。</li><li>使用指定的参数调用构造函数 <em><code>Foo</code></em>，并将 <code>this</code> 绑定到新创建的对象。<code>new *Foo*</code> 等同于 <em><code>new Foo</code></em><code>()</code>，也就是没有指定参数列表，<em><code>Foo</code></em> 不带任何参数调用的情况。</li><li>由构造函数返回的对象就是 <code>new</code> 表达式的结果。如果构造函数没有显式返回一个对象，则使用步骤 1 创建的对象。（一般情况下，构造函数不返回值，但是用户可以选择主动返回对象，来覆盖正常的对象创建步骤）</li></ol><h3 id="_4-到底怎么理解-new-记不住怎么办" tabindex="-1"><a class="header-anchor" href="#_4-到底怎么理解-new-记不住怎么办" aria-hidden="true">#</a> 4.到底怎么理解 new，记不住怎么办？</h3><ol><li>new 创建了一个对象 A。</li><li>对象 A 的隐式原型指向函数的显式原型（foo.prototype）</li><li>函数的 this 指向这个对象 A &amp;&amp; 运行函数</li><li><code>new foo()</code> 返回结果 ，函数有返回对象，结果=》这个对象； 函数没有返回对象，结果=》new 出来的对象 A。</li></ol><h3 id="_5-手写一个功能类似于-new-的函数" tabindex="-1"><a class="header-anchor" href="#_5-手写一个功能类似于-new-的函数" aria-hidden="true">#</a> 5.手写一个功能类似于 new 的函数</h3><p>好吧，到现在为止我算是彻底理解 new 关键词干嘛的了。俗话说的好，找不到女票，可以给自己 new 一个对象。</p><p><strong>通过 new 运算符，我们可以得到一个对象。^_^</strong></p><p>来手写一个函数加深理解！<strong>！！！为了方便理解，模拟的步骤一对一 对应 章节四的内容</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Tomato</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;我这次真的理解new是干嘛的了&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tomato</span><span class="token punctuation">(</span><span class="token string">&#39;小番茄&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token comment">//  { name: &#39;小番茄&#39;, title: &#39;我这次真的理解new是干嘛的了&#39; }</span>

<span class="token comment">// 这里就以函数的形式模仿 new的作用</span>
<span class="token keyword">function</span> <span class="token function">myNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 获取一下函数的传参 ！！这个地方和平时的 slice 不一样，这里使用的是shift,shhift会去除原数组第一个元素，并返回第一个元素。</span>
  <span class="token keyword">var</span> fn <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>

  <span class="token comment">// 1.创建一个对象</span>
  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// 2.修改对象的隐式原型属性指向 函数的显示原型</span>
  obj<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> fn<span class="token punctuation">.</span>prototype

  <span class="token comment">// 3.函数的this指向这个对象A  &amp;&amp; 运行函数</span>
  <span class="token keyword">let</span> back <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>

  <span class="token comment">// 4. 处理返回值</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> back <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> back <span class="token operator">:</span> obj
<span class="token punctuation">}</span>

<span class="token function">myNew</span><span class="token punctuation">(</span>Tomato<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="end" tabindex="-1"><a class="header-anchor" href="#end" aria-hidden="true">#</a> end</h2><ul><li>本文系个人学习总结，表达不删请见谅</li></ul>`,17),p=[t];function c(i,l){return s(),a("div",null,p)}const d=n(o,[["render",c],["__file","29.new.html.vue"]]);export{d as default};
