import{_ as e,o as t,c as s,e as c}from"./app.acfc35a6.js";const a={},o=c('<h1 id="css-选择器和优先级" tabindex="-1"><a class="header-anchor" href="#css-选择器和优先级" aria-hidden="true">#</a> css 选择器和优先级</h1><h2 id="解释" tabindex="-1"><a class="header-anchor" href="#解释" aria-hidden="true">#</a> 解释：</h2><p>简单来说： <code>!important &gt; style &gt; id &gt; class &gt; 标签 &gt; *</code></p><p>其他:</p><p>内联样式，优先级 1000 id 选择器，优先级 100 类和伪类，优先级 10 元素选择器，优先级 1 通配选择器，优先级 0</p><ul><li>上述的优先级相信大家都会，但是如果碰到多层嵌套的如何计算的？ 当选择器包含多种选择器时，需要将多种选择器的优先级相加然后进行比较。但是注意，选择器的优先级计算不会超过他的最大数量级，如果选择器的优先级一样，则使用靠后的样式。</li></ul><blockquote><p>其实样式优先级计算的算法是：style &gt; id &gt; class &gt; 标签。 这四个标签对应四个变量，选择器出现一次，对应位置的数字累加依次。对比优先级时，从左到右。 （和上述的数字表示效果相同）</p></blockquote>',7),_=[o];function r(d,i){return t(),s("div",null,_)}const n=e(a,[["render",r],["__file","05.css选择器和优先级.html.vue"]]);export{n as default};
