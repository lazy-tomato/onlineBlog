import{_ as a,o as s,c as n,e}from"./app.acfc35a6.js";const o={},t=e(`<h1 id="cookie-localstorage-sessionstorage" tabindex="-1"><a class="header-anchor" href="#cookie-localstorage-sessionstorage" aria-hidden="true">#</a> cookie,localStorage,sessionStorage</h1><h2 id="_1-简答" tabindex="-1"><a class="header-anchor" href="#_1-简答" aria-hidden="true">#</a> 1. 简答</h2><h3 id="_1-1-cookie" tabindex="-1"><a class="header-anchor" href="#_1-1-cookie" aria-hidden="true">#</a> 1.1 cookie</h3><p>本身用于浏览器和 server 通讯。 被“借用”到本地存储来的。 可用 document.cookie = &#39;...&#39; 来修改。</p><p>其缺点：</p><p>存储大小限制为 4KB。 http 请求时需要发送到服务端，增加请求数量。 只能用 document.cookie = &#39;...&#39; 来修改，太过简陋。</p><h3 id="_1-2-localstorage-和-sessionstorage" tabindex="-1"><a class="header-anchor" href="#_1-2-localstorage-和-sessionstorage" aria-hidden="true">#</a> 1.2 localStorage 和 sessionStorage</h3><p>HTML5 专门为存储来设计的，最大可存 5M。 API 简单易用， setItem getItem。 不会随着 http 请求被发送到服务端。</p><p>它们的区别：</p><p>localStorage 数据会永久存储，除非代码删除或手动删除。 sessionStorage 数据只存在于当前会话，浏览器关闭则清空。 一般用 localStorage 会多一些。</p><h2 id="_2-它们的相同点和不同点" tabindex="-1"><a class="header-anchor" href="#_2-它们的相同点和不同点" aria-hidden="true">#</a> 2.它们的相同点和不同点</h2><h3 id="_2-1-相同点" tabindex="-1"><a class="header-anchor" href="#_2-1-相同点" aria-hidden="true">#</a> 2.1 相同点</h3><ol><li>它们都可以在浏览器端存储信息，</li><li>针对的都是同源。</li></ol><h3 id="_2-2-不同点" tabindex="-1"><a class="header-anchor" href="#_2-2-不同点" aria-hidden="true">#</a> 2.2 不同点</h3><ol><li>能够存储大小不同；</li><li>cookie会自动跟随http请求发送给后端，但是localStorage 和 sessionStorage不会。</li><li>数据有效期不同，cookie在设置的有效期中有效，sessionStorage在会话打开的时候有效，localStorage不删除的话永久有效</li><li>sessionStorage只在当前tab页有效，而cookie和localstorage在同源的网页下都有效。</li></ol><h2 id="_3-相关的api" tabindex="-1"><a class="header-anchor" href="#_3-相关的api" aria-hidden="true">#</a> 3.相关的API</h2><h3 id="_3-1-cookie" tabindex="-1"><a class="header-anchor" href="#_3-1-cookie" aria-hidden="true">#</a> 3.1 cookie</h3><p>通过<code>document.cookie</code>操作</p><h3 id="_3-2-localstorage" tabindex="-1"><a class="header-anchor" href="#_3-2-localstorage" aria-hidden="true">#</a> 3.2 localStorage</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//设置localStorage保存到本地，第一个为变量名，第二个是值</span>
localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;Author&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Jane&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取数据</span>
localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;Author&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 删除保存的数据</span>
localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;Author&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 清除所有保存的数据</span>
localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-sessionstorage" tabindex="-1"><a class="header-anchor" href="#_3-3-sessionstorage" aria-hidden="true">#</a> 3.3 sessionStorage</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 设置sessionStorage保存到本地，第一个为变量名，第二个是值</span>
sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;sessionName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 获取数据</span>
sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;sessionName&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 删除保存的数据</span>
sessionStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;sessionName&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 清除所有保存的数据</span>
sessionStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),i=[t];function c(l,p){return s(),n("div",null,i)}const d=a(o,[["render",c],["__file","30.cookie,localStorage,sessionStorage.html.vue"]]);export{d as default};
