import{_ as r,r as t,o as c,c as n,a as e,b as s,d as o,e as p}from"./app.acfc35a6.js";const h={},d=p('<h1 id="_2-webpack-中的-hmr-热更新-md" tabindex="-1"><a class="header-anchor" href="#_2-webpack-中的-hmr-热更新-md" aria-hidden="true">#</a> 2.webpack 中的 hmr 热更新.md</h1><h2 id="主干逻辑" tabindex="-1"><a class="header-anchor" href="#主干逻辑" aria-hidden="true">#</a> 主干逻辑</h2><p>Server 端使用 webpack-dev-server 去启动本地服务，内部实现主要使用了 webpack、express、websocket。</p><p>使用 express 启动本地服务，当浏览器访问资源时对此做响应。 服务端和客户端使用 websocket 实现长连接 webpack 监听源文件的变化，即当开发者保存文件时触发 webpack 的重新编译。</p><p>每次编译都会生成 hash 值、已改动模块的 json 文件、已改动模块代码的 js 文件 编译完成后通过 socket 向客户端推送当前编译的 hash 戳</p><p>客户端的 websocket 监听到有文件改动推送过来的 hash 戳，会和上一次对比</p><p>一致则走缓存 不一致则通过 ajax 和 jsonp 向服务端获取最新资源</p><p>使用内存文件系统去替换有修改的内容实现局部刷新</p><p>作者：careteenL 链接：https://juejin.cn/post/6844903933157048333 来源：稀土掘金 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><h2 id="优质相关博客" tabindex="-1"><a class="header-anchor" href="#优质相关博客" aria-hidden="true">#</a> 优质相关博客</h2>',10),_={href:"https://juejin.cn/post/6844903933157048333#heading-28",target:"_blank",rel:"noopener noreferrer"};function i(k,l){const a=t("ExternalLinkIcon");return c(),n("div",null,[d,e("p",null,[e("a",_,[s("搞懂 webpack 热更新原理"),o(a)])])])}const m=r(h,[["render",i],["__file","2.webpack中的hmr热更新.html.vue"]]);export{m as default};
