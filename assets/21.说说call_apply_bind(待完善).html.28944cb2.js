import{_ as n,o as a,c as s,e as p}from"./app.acfc35a6.js";const t={},e=p(`<h1 id="说说-call-apply-bind" tabindex="-1"><a class="header-anchor" href="#说说-call-apply-bind" aria-hidden="true">#</a> 说说 call,apply,bind</h1><h2 id="解释" tabindex="-1"><a class="header-anchor" href="#解释" aria-hidden="true">#</a> 解释：</h2><p>都是用来改变 js 中的 this 指向。</p><p>call,apply 会立即执行对应的函数，bind 会返回一个新函数。</p><p>call,apply 两者主要差异就是传参，一个是正常传参，一个是用数组的形式传参</p><h2 id="手写" tabindex="-1"><a class="header-anchor" href="#手写" aria-hidden="true">#</a> 手写</h2><p>这三个方法肯定是要会手写的。</p><h2 id="拓展思维" tabindex="-1"><a class="header-anchor" href="#拓展思维" aria-hidden="true">#</a> 拓展思维</h2><p>说道这里，有一个 apply 的比较奇妙的用法。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 在阅读 vue2 的源码的时候，阅读到这么一行代码，很有意思。这里再提一下。</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> children<span class="token punctuation">)</span>

<span class="token comment">// 可以怎么使用？ 用来扁平化数组</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// [1, 2, 3, 2, 3, 4, 2, 1, 4, 2, 1, 1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),c=[e];function o(l,i){return a(),s("div",null,c)}const r=n(t,[["render",o],["__file","21.说说call,apply,bind(待完善).html.vue"]]);export{r as default};
